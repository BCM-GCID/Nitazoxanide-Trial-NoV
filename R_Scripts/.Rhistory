library(ggplot2)
library(data.table)
library(stringr)
library(dplyr)
library(readxl)
library(lubridate)
library(tidyr)
library(ggpubr)
library(rprojroot)
library(wesanderson)
library(plotly)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(ggplot2)
library(data.table)
library(stringr)
library(dplyr)
library(readxl)
library(lubridate)
library(tidyr)
library(ggpubr)
library(rprojroot)
library(wesanderson)
library(plotly)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
metadata<-read_excel('../p1707_NTZ_metadata.xlsx')
View(metadata)
v1_only <- metadata %>%
filter(VisitID == 'V1')
v1_only
metadata %>%
filter(VisitID != 'V1')
metadata %>%
filter(VisitID != 'V1') %>%
inner_join(v1_only by=SubjectID)
metadata %>%
filter(VisitID != 'V1') %>%
inner_join(v1_only, by=join_by(SubjectID=SubjectID))
metadata %>%
filter(VisitID != 'V1') %>%
inner_join(v1_only, by=join_by(SubjectID==SubjectID))
metadata %>%
filter(VisitID != 'V1') %>%
inner_join(v1_only, by=join_by(SubjectID==SubjectID))
select(SampLognum.x, SampLognum.y)
metadata %>%
filter(VisitID != 'V1') %>%
inner_join(v1_only, by=join_by(SubjectID==SubjectID))%>%
select(SampLognum.x, SampLognum.y)
library(ggplot2)
library(data.table)
library(stringr)
library(dplyr)
library(readxl)
library(lubridate)
library(tidyr)
library(ggpubr)
library(rprojroot)
library(wesanderson)
library(plotly)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
metadata<-read_excel('../p1707_NTZ_metadata.xlsx')
v1_only <- metadata %>%
filter(VisitID == 'V1')
mapping<-metadata %>%
filter(VisitID != 'V1') %>%
inner_join(v1_only, by=join_by(SubjectID==SubjectID))%>%
select(SampLognum.x, SampLognum.y)
write.table(mapping, file='mapping.tsv', col.names=FALSE, quote=FALSE, sep='\t', row.names = FALSE)
summary_stats <-  read.table("../Deduplicated/NoV.summaryStats.txt", sep = "\t", header = TRUE)
View(summary_stats)
View(summary_stats)
summary_stats <-  read.table("../Deduplicated/NoV.summaryStats.txt", sep = "\t", header = TRUE) %>%
mutate(SampLognum = sub(".*-", "", SampleID))
View(summary_stats)
mapping<-metadata %>%
filter(VisitID != 'V1') %>%
inner_join(v1_only, by=join_by(SubjectID==SubjectID))%>%
inner_join(summary_stats, by=join_by(SampLognum.x==SampLognum))%>%
select(SampLognum.x, SampLognum.y)
View(metadata)
library(ggplot2)
library(data.table)
library(stringr)
library(dplyr)
library(readxl)
library(lubridate)
library(tidyr)
library(ggpubr)
library(rprojroot)
library(wesanderson)
library(plotly)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
metadata<-read_excel('../p1707_NTZ_metadata.xlsx')
summary_stats <-  read.table("../Deduplicated/NoV.summaryStats.txt", sep = "\t", header = TRUE) %>%
mutate(SampLognum = sub(".*-", "", SampleID))
v1_only <- metadata %>%
filter(VisitID == 'V1')
mapping<-metadata %>%
filter(VisitID != 'V1') %>%
inner_join(v1_only, by=join_by(SubjectID==SubjectID))%>%
inner_join(summary_stats, by=join_by(SampLognum.x==SampLognum))%>%
select(SampLognum.x, SampLognum.y)
library(ggplot2)
library(data.table)
library(stringr)
library(dplyr)
library(readxl)
library(lubridate)
library(tidyr)
library(ggpubr)
library(rprojroot)
library(wesanderson)
library(plotly)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
metadata<-read_excel('../p1707_NTZ_metadata.xlsx')
summary_stats <-  read.table("../Deduplicated/NoV.summaryStats.txt", sep = "\t", header = TRUE) %>%
mutate(SampLognum = as.character(sub(".*-", "", SampleID)))
v1_only <- metadata %>%
filter(VisitID == 'V1')
mapping<-metadata %>%
filter(VisitID != 'V1') %>%
inner_join(v1_only, by=join_by(SubjectID==SubjectID))%>%
inner_join(summary_stats, by=join_by(SampLognum.x==SampLognum))%>%
select(SampLognum.x, SampLognum.y)
library(ggplot2)
library(data.table)
library(stringr)
library(dplyr)
library(readxl)
library(lubridate)
library(tidyr)
library(ggpubr)
library(rprojroot)
library(wesanderson)
library(plotly)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
metadata<-read_excel('../p1707_NTZ_metadata.xlsx')
summary_stats <-  read.table("../Deduplicated/NoV.summaryStats.txt", sep = "\t", header = TRUE) %>%
mutate(SampLognum = as.character(sub(".*-", "", SampleID)))
v1_only <- metadata %>%
filter(VisitID == 'V1')
mapping<-metadata %>%
filter(VisitID != 'V1') %>%
inner_join(v1_only, by=join_by(SubjectID==SubjectID))%>%
mutate(SampLognum.x = as.character(SampLognum.x))%>%
inner_join(summary_stats, by=join_by(SampLognum.x==SampLognum))%>%
select(SampLognum.x, SampLognum.y)
View(mapping)
mapping<-metadata %>%
filter(VisitID != 'V1') %>%
inner_join(v1_only, by=join_by(SubjectID==SubjectID))%>%
mutate(SampLognum.x = as.character(SampLognum.x))%>%
inner_join(summary_stats, by=join_by(SampLognum.x==SampLognum))
View(mapping)
library(ggplot2)
library(data.table)
library(stringr)
library(dplyr)
library(readxl)
library(lubridate)
library(tidyr)
library(ggpubr)
library(rprojroot)
library(wesanderson)
library(plotly)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
metadata<-read_excel('../p1707_NTZ_metadata.xlsx')
summary_stats <-  read.table("../Deduplicated/NoV.summaryStats.txt", sep = "\t", header = TRUE) %>%
mutate(SampLognum = as.character(sub(".*-", "", SampleID)))
v1_only <- metadata %>%
filter(VisitID == 'V1')
mapping<-metadata %>%
filter(VisitID != 'V1') %>%
inner_join(v1_only, by=join_by(SubjectID==SubjectID))%>%
mutate(SampLognum.x = as.character(SampLognum.x))%>%
inner_join(summary_stats, by=join_by(SampLognum.x==SampLognum))%>%
filter(Length > 7200 & Completeness >= 90)
mapping<-metadata %>%
filter(VisitID != 'V1') %>%
inner_join(v1_only, by=join_by(SubjectID==SubjectID))%>%
mutate(SampLognum.x = as.character(SampLognum.x))%>%
inner_join(summary_stats, by=join_by(SampLognum.x==SampLognum))%>%
filter(Length > 7200 & Completness >= 90)
View(metadata)
View(mapping)
library(ggplot2)
library(data.table)
library(stringr)
library(dplyr)
library(readxl)
library(lubridate)
library(tidyr)
library(ggpubr)
library(rprojroot)
library(wesanderson)
library(plotly)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
metadata<-read_excel('../p1707_NTZ_metadata.xlsx')
summary_stats <-  read.table("../Deduplicated/NoV.summaryStats.txt", sep = "\t", header = TRUE) %>%
mutate(SampLognum = as.character(sub(".*-", "", SampleID)))
v1_only <- metadata %>%
filter(VisitID == 'V1')
mapping<-metadata %>%
filter(VisitID != 'V1') %>%
inner_join(v1_only, by=join_by(SubjectID==SubjectID))%>%
mutate(SampLognum.x = as.character(SampLognum.x))%>%
inner_join(summary_stats, by=join_by(SampLognum.x==SampLognum))%>%
filter(Length > 7200 & Completness >= 90)%>%
select(SampLognum.x, SampLognum.y)
write.table(mapping, file='mapping.tsv', col.names=FALSE, quote=FALSE, sep='\t', row.names = FALSE)
library(ggplot2)
library(data.table)
library(stringr)
library(dplyr)
library(readxl)
library(lubridate)
library(tidyr)
library(ggpubr)
library(rprojroot)
library(wesanderson)
library(plotly)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
metadata<-read_excel('../p1707_NTZ_metadata.xlsx')
summary_stats <-  read.table("../Deduplicated/NoV.summaryStats.txt", sep = "\t", header = TRUE) %>%
mutate(SampLognum = as.character(sub(".*-", "", SampleID)))
v1_only <- metadata %>%
filter(VisitID == 'V1')
mapping<-metadata %>%
filter(VisitID != 'V1') %>%
inner_join(v1_only, by=join_by(SubjectID==SubjectID))%>%
mutate(SampLognum.x = as.character(SampLognum.x))%>%
inner_join(summary_stats, by=join_by(SampLognum.x==SampLognum))%>%
filter(Length > 7200 & Completness >= 90)%>%
mutate(SampLognum.x = paste('p1707-', SampLognum.x, sep=''))%>%
mutate(SampLognum.y = paste('p1707-', SampLognum.y, sep=''))%>%
select(SampLognum.x, SampLognum.y)
write.table(mapping, file='mapping.tsv', col.names=FALSE, quote=FALSE, sep='\t', row.names = FALSE)
library(tidyverse)
library(ggplot2)
curDir=dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(curDir)
# https://useast.ensembl.org/info/genome/variation/prediction/predicted_data.html
# https://pcingola.github.io/SnpEff/adds/VCFannotationformat_v1.0.pdf
# https://pcingola.github.io/SnpEff/se_inputoutput/
filedir<- paste('../vc_output', sep="")
filelist <- data.frame(list.files(path=filedir, full.names = TRUE, recursive = TRUE, pattern = '.snpEff.vcf'))
colnames(filelist) <- c('path')
filelist$SampleID <- sapply(filelist$path, function(x){unlist(strsplit(x, "/"))[3]})
filelist$SampleID
library(readxl)
metadata<- read_xlsx('../p1707_NTZ_metadata.xlsx', sep='\t')
metadata<- read_xlsx('../p1707_NTZ_metadata.xlsx')
metadata
filelist
metadata <- merge(metadata, filelist, by.x='SampLognum', by.y='SampleID')
metadata
filelist
View(metadata)
library(tidyverse)
library(ggplot2)
library(readxl)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# https://useast.ensembl.org/info/genome/variation/prediction/predicted_data.html
# https://pcingola.github.io/SnpEff/adds/VCFannotationformat_v1.0.pdf
# https://pcingola.github.io/SnpEff/se_inputoutput/
metadata<- read_xlsx('../p1707_NTZ_metadata.xlsx')
names(metadata) <-c('SampleID', 'Volnum', 'PatientID' )
filelist <- data.frame(list.files(path='../vc_output', full.names = TRUE, recursive = TRUE, pattern = '.snpEff.vcf'))
colnames(filelist) <- c('path')
filelist$SampleID <- sapply(filelist$path, function(x){unlist(strsplit(x, "/"))[3]})
metadata <- merge(metadata, filelist, by.x='SampLognum', by.y='SampleID')
metadata
metadata<- read_xlsx('../p1707_NTZ_metadata.xlsx')
View(metadata)
# https://useast.ensembl.org/info/genome/variation/prediction/predicted_data.html
# https://pcingola.github.io/SnpEff/adds/VCFannotationformat_v1.0.pdf
# https://pcingola.github.io/SnpEff/se_inputoutput/
metadata<- read_xlsx('../p1707_NTZ_metadata.xlsx')
metadata$SampleID <- paste('p1707', metadata$SampLognum,sep='-')
names(metadata) <-c('SampleID', 'Volnum', 'PatientID' )
filelist <- data.frame(list.files(path='../vc_output', full.names = TRUE, recursive = TRUE, pattern = '.snpEff.vcf'))
colnames(filelist) <- c('path')
filelist$SampleID <- sapply(filelist$path, function(x){unlist(strsplit(x, "/"))[3]})
metadata <- merge(metadata, filelist, by='SampleID')
View(metadata)
metadata<- read_xlsx('../p1707_NTZ_metadata.xlsx')
View(mapping)
library(tidyverse)
library(ggplot2)
library(readxl)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# https://useast.ensembl.org/info/genome/variation/prediction/predicted_data.html
# https://pcingola.github.io/SnpEff/adds/VCFannotationformat_v1.0.pdf
# https://pcingola.github.io/SnpEff/se_inputoutput/
metadata<- read_xlsx('../p1707_NTZ_metadata.xlsx')
View(metadata)
metadata$SampleID <- paste('p1707', metadata$SampLognum,sep='-')
filelist <- data.frame(list.files(path='../vc_output', full.names = TRUE, recursive = TRUE, pattern = '.snpEff.vcf'))
colnames(filelist) <- c('path')
filelist$SampleID <- sapply(filelist$path, function(x){unlist(strsplit(x, "/"))[3]})
metadata <- merge(metadata, filelist, by='SampleID')
View(metadata)
metadata$PatientID
View(metadata)
library(tidyverse)
library(ggplot2)
library(readxl)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# https://useast.ensembl.org/info/genome/variation/prediction/predicted_data.html
# https://pcingola.github.io/SnpEff/adds/VCFannotationformat_v1.0.pdf
# https://pcingola.github.io/SnpEff/se_inputoutput/
metadata<- read_xlsx('../p1707_NTZ_metadata.xlsx')
metadata$SampleID <- paste('p1707', metadata$SampLognum,sep='-')
filedir<- './output_by_subject'
filelist <- data.frame(list.files(path='../vc_output', full.names = TRUE, recursive = TRUE, pattern = '.snpEff.vcf'))
colnames(filelist) <- c('path')
filelist$SampleID <- sapply(filelist$path, function(x){unlist(strsplit(x, "/"))[3]})
metadata <- merge(metadata, filelist, by='SampleID')
# parse_snpeffannot <- function(annot){
#   return(sapply(annot, function(x){unlist(strsplit(x, "\\|"))}))
# }
for (patientID in unique(metadata$SubjectID)){
print(patientID)
patientDF<-metadata[metadata$SubjectID==patientID,]
print(nrow(patientDF))
finalDF<-NULL
for(path in patientDF$path)
{
df <- try(read.table(path,  header=FALSE,  sep="\t"))
if(inherits(df, "try-error"))
next
colnames(df) <- c("CHROM", "POS", "ID", "REF", "ALT", "QUAL", "FILTER", "INFO", "FORMAT", "DATA")
sampleDF <-  df[,c( "POS", "REF", "ALT")]
sampID <- patientDF[patientDF$path == path, ]$SampleID
print(sampID)
#AF=0.315436;GFF_FEATURE=NA;REF_CODON=NA;REF_AA=NA;ALT_CODON=NA;ALT_AA=NA;
sampleDF$ALLEL_FREQ<- sapply(df$INFO, function(x){unlist(strsplit(unlist(strsplit(x, ";"))[1], "="))[2]})
sampleDF$GFF_FEATURE<- sapply(df$INFO, function(x){unlist(strsplit(unlist(strsplit(x, ";"))[2], "="))[2]})
sampleDF$REF_CODON<- sapply(df$INFO, function(x){unlist(strsplit(unlist(strsplit(x, ";"))[3], "="))[2]})
sampleDF$REF_AA<- sapply(df$INFO, function(x){unlist(strsplit(unlist(strsplit(x, ";"))[4], "="))[2]})
sampleDF$ALT_CODON<- sapply(df$INFO, function(x){unlist(strsplit(unlist(strsplit(x, ";"))[5], "="))[2]})
sampleDF$ALT_AA<- sapply(df$INFO, function(x){unlist(strsplit(unlist(strsplit(x, ";"))[6], "="))[2]})
# GT:REF_DP:REF_RV:REF_QUAL:ALT_DP:ALT_RV:ALT_QUAL:ALT_FREQ
# 1 :2     :0     :68      :9     :9     :37      :0.818182
sampleDF$REF_DP <- sapply(df$DATA, function(x){unlist(strsplit(x, ":"))[2]})
sampleDF$REF_QUAL <- sapply(df$DATA, function(x){unlist(strsplit(x, ":"))[4]})
sampleDF$ALT_DP <- sapply(df$DATA, function(x){unlist(strsplit(x, ":"))[5]})
sampleDF$ALT_QUAL <- sapply(df$DATA, function(x){unlist(strsplit(x, ":"))[7]})
is.na(sampleDF) <- sampleDF == "NA"
snpeff_annots<- sapply(df$INFO, function(x){unlist(strsplit(unlist(strsplit(x, ";"))[7], "="))[2]})
snpeff_annots <- sapply(snpeff_annots, function(x){unlist(strsplit(x, ","))[1]})
snpeff_annots <- paste(snpeff_annots, "|" ,sep="")
#T|missense_variant|MODERATE|Gene_4_5373|Gene_4_5373|transcript|AAB50465.1|protein_coding|1/1|c.4052C>T|p.Ala1351Val|4052/5370|4052/5370|1351/1789||
sampleDF$SNPEFF_ANNOT <- sapply(snpeff_annots, function(x){unlist(strsplit(x, "\\|"))})[2,]
sampleDF$SNPEFF_IMPACT <- sapply(snpeff_annots, function(x){unlist(strsplit(x, "\\|"))})[3,]
sampleDF$SNPEFF_GENE <- sapply(snpeff_annots, function(x){unlist(strsplit(x, "\\|"))})[4,]
sampleDF$SNPEFF_FTYPE <- sapply(snpeff_annots, function(x){unlist(strsplit(x, "\\|"))})[6,]
sampleDF$SNPEFF_FID <- sapply(snpeff_annots, function(x){unlist(strsplit(x, "\\|"))})[7,]
sampleDF$SNPEFF_BIOTYPE <- sapply(snpeff_annots, function(x){unlist(strsplit(x, "\\|"))})[8,]
sampleDF$SNPEFF_HGVSC <- sapply(snpeff_annots, function(x){unlist(strsplit(x, "\\|"))})[10,]
sampleDF$SNPEFF_HGVSP <- sapply(snpeff_annots, function(x){unlist(strsplit(x, "\\|"))})[11,]
colnames(sampleDF)[4:21] <- paste(sampID, colnames(sampleDF[,c(4:21)]),sep=".")
if (is.null(finalDF)) {
finalDF <- sampleDF
}
else {
finalDF <- merge(finalDF, sampleDF, all=TRUE, by=c( "POS", "REF", "ALT"))
}
write.table(finalDF, file=paste(filedir, '/', patientID, '.tsv', sep=''), quote=FALSE, sep='\t', row.names = FALSE)
# tfinalDF <- finalDF
# rownames(tfinalDF) <-paste(tfinalDF$REF, tfinalDF$POS,  tfinalDF$ALT, sep="")
#
# tfinalDF <- data.frame(t(tfinalDF[-c(1,2,3)]))
#  columns<- colnames(tfinalDF)
#  tfinalDF$sampleInfo <- rownames(tfinalDF)
#  tfinalDF<- tfinalDF[,c('sampleInfo',columns)]
#
# write.table(tfinalDF , file=paste(filedir, '/', patientID, '_T',  '.tsv', sep=''), quote=FALSE, sep='\t', row.names = FALSE)
}
}
library(tidyverse)
library(reshape2)
library(scales)
library(RColorBrewer)
library(patchwork)
## input information
# folder with per sample variant tables
filePath <- "output_by_subject"
pat <- "*\\d.tsv"
# data import
files <- list.files(path = filePath, pattern = pat, full.names = TRUE)
metadata<- read_xlsx('../p1707_NTZ_metadata.xlsx')
metadata$SampleID <- paste('p1707', metadata$SampLognum,sep='-')
# Create a single spreadsheet combined across all patient variant files - raw, unfiltered
new_data <- purrr::map_df(files, function(x) {
mydata <- read_tsv(x, col_names = TRUE)
mydata %>%
select(POS | REF | ALT | ends_with("ALLEL_FREQ") | contains("SNPEFF") | ends_with("DP") | ends_with("DP") | ends_with("QUAL") | ends_with("AA") | ends_with("CODON")) %>%
mutate(across(ends_with("ALLEL_FREQ") | ends_with("DP") | ends_with("QUAL"), as.character)) %>%
pivot_longer(!c(POS, REF, ALT), names_to = "type", values_to = "values") %>%
filter(values != "NA") %>%
separate(type, into = c("SampleID", "type"), sep = "\\.") %>%
spread(type, values) %>%
type_convert() %>%
group_by(SampleID) %>%
mutate(Annotation = gsub("_", " ", SNPEFF_ANNOT),
Annotation = str_replace(Annotation, "^\\w{1}", toupper),
totalDP = ALT_DP + REF_DP) %>%
ungroup() %>%
type_convert()%>%
# if there is any metadata to add
inner_join(., metadata, by = "SampleID")
})
write_delim(new_data, paste(filePath, "/allSampleVariantCalls-AA_metadata_UNFILTERED.tsv", sep=""), delim = "\t")
